syntax = "proto3";

package mruv.estates;

option go_package = "github.com/MruV-RP/mruv-pb-go/estates";

import "google/api/annotations.proto"; //from https://github.com/googleapis/googleapis
import "mruv/objects/objects.proto";
import "mruv/entrances/entrances.proto";
import "mruv/gates/gates.proto";

// The MruV estate service provides procedures for managing buildings and other estates.
service MruVEstateService {
    // Create real estate.
    rpc CreateEstate(CreateEstateRequest) returns (CreateEstateResponse) {
        option (google.api.http) = {
            post: "/v1/estates"
            body: "*"
        };
    }

    // Get real estate.
    rpc GetEstate(GetEstateRequest) returns (Estate) {
        option (google.api.http) = {
            get: "/v1/estates/{id}"
        };
    }

    // Update real estate.
    rpc UpdateEstate(UpdateEstateRequest) returns (UpdateEstateResponse) {
        option (google.api.http) = {
            patch: "/v1/estates/{id}"
            body: "*"
        };
    }

    // Delete real estate.
    rpc DeleteEstate(DeleteEstateRequest) returns (DeleteEstateResponse) {
        option (google.api.http) = {
            delete: "/v1/estates/{id}"
        };
    }

    // Get all created real estates.
    rpc GetEstates(GetEstatesRequest) returns (GetEstatesResponse) {
        option (google.api.http) = {
            get: "/v1/estates"
        };
    }

    // Add a gate to an estate.
    rpc AddGate(AddGateRequest) returns (AddGateResponse) {
        option (google.api.http) = {
            post: "/v1/estates/{estate_id}/gates"
            body: "*"
        };
    }

    // Delete a gate from estate.
    rpc RemoveGate(RemoveGateRequest) returns (RemoveGateResponse) {
        option (google.api.http) = {
            delete: "/v1/estates/{estate_id}/gates/{gate_id}"
        };
    }

    // Get all estate gates.
    rpc GetEstateGates(GetEstateGatesRequest) returns (GetEstateGatesResponse) {
        option (google.api.http) = {
            get: "/v1/estate/{estate_id}/gates"
        };
    }

    // Add an entrance to estate.
    rpc AddEntrance(AddEntranceRequest) returns (AddEntranceResponse) {
        option (google.api.http) = {
            post: "/v1/estates/{estate_id}/entrances"
            body: "*"
        };
    }

    // Remove an entrance from estate.
    rpc RemoveEntrance(RemoveEntranceRequest) returns (RemoveEntranceResponse) {
        option (google.api.http) = {
            delete: "/v1/estates/{estate_id}/entrances/{entrance_id}"
        };
    }

    // Get all estate entrances.
    rpc GetEstateEntrances(GetEstateEntrancesRequest) returns (GetEstateEntrancesResponse) {
        option (google.api.http) = {
            get: "/v1/estate/{estate_id}/entrances"
        };
    }

    // Get full estates data
    rpc FetchAll (FetchAllEstatesRequest) returns (stream FetchAllEstatesResponse) {}
}

message Estate {
    uint32 id = 1;
    string name = 2;
    string description = 3;

    repeated uint32 entrances = 4;
    repeated uint32 gates = 5;
    repeated uint32 rooms = 6;

    uint32 product_id = 7;
}

message FullEstate {
    uint32 id = 1;
    string name = 2;
    string description = 3;

    map<uint32, mruv.objects.Object> objects = 4;
    map<uint32, mruv.objects.RemovedBuilding> removed_buildings = 5;
    map<uint32, mruv.entrances.Entrance> entrances = 6;
    map<uint32, mruv.gates.Gate> gates = 7;
    // TODO: map<uint32, mruv.plots.Plot> rooms = 8;

    // TODO: mruv.economy.Product product_id = 9;
}

// Request message for rpc `CreateEstate`.
message CreateEstateRequest {
    string name = 1;
    string description = 2;
}
// Response message for rpc `CreateEstate`.
message CreateEstateResponse {
    uint32 id = 1;
}

// Request message for rpc `GetEstate`.
message GetEstateRequest {
    uint32 id = 1;

}

// Request message for rpc `UpdateEstate`.
message UpdateEstateRequest {
    uint32 id = 1;
    string name = 2;
    string description = 3;
}
// Response message for rpc `UpdateEstate`.
message UpdateEstateResponse {

}

// Request message for rpc `DeleteEstate`.
message DeleteEstateRequest {
    uint32 id = 1;

}
// Response message for rpc `DeleteEstate`.
message DeleteEstateResponse {

}

// Request message for rpc `GetEstates`.
message GetEstatesRequest {
    uint32 from = 1;
    uint32 limit = 2;
}
// Response message for rpc `GetEstates`.
message GetEstatesResponse {
    repeated Estate estates = 1;
}

// Request message for rpc `AddGate`.
message AddGateRequest {
    uint32 estate_id = 1;
    uint32 gate_id = 2;
}
// Response message for rpc `AddGate`.
message AddGateResponse {
}

// Request message for rpc `RemoveGate`.
message RemoveGateRequest {
    uint32 estate_id = 1;
    uint32 gate_id = 2;
}
// Response message for rpc `RemoveGate`.
message RemoveGateResponse {
}

// Request message for rpc `GetEstateGates`.
message GetEstateGatesRequest {
    uint32 estate_id = 1;
}
// Response message for rpc `GetEstateGates`.
message GetEstateGatesResponse {
    repeated mruv.gates.Gate gates = 1;
}

// Request message for rpc `AddEntrance`.
message AddEntranceRequest {
    uint32 estate_id = 1;
    uint32 entrance_id = 2;
}
// Response message for rpc `AddEntrance`.
message AddEntranceResponse {
}

// Request message for rpc `RemoveEntrance`.
message RemoveEntranceRequest {
    uint32 estate_id = 1;
    uint32 entrance_id = 2;
}
// Response message for rpc `RemoveEntrance`.
message RemoveEntranceResponse {
}

// Request message for rpc `GetEstateEntrances`.
message GetEstateEntrancesRequest {
    uint32 estate_id = 1;
}
// Response message for rpc `GetEstateEntrances`.
message GetEstateEntrancesResponse {
    repeated mruv.entrances.Entrance entrances = 1;
}

// Request message for rpc `FetchAll`.
message FetchAllEstatesRequest {
    uint32 chunk_size = 1;
}
// Response message for rpc `FetchAll`.
message FetchAllEstatesResponse {
    repeated FullEstate estates = 1;
}
