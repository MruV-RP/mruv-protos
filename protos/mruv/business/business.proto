syntax = "proto3";

package mruv.business;

option go_package = "github.com/MruV-RP/mruv-pb-go/business";

import "google/api/annotations.proto"; //from https://github.com/googleapis/googleapis

// The MruV business service provides procedures for managing businesses.
// Business can be owned by a player or organisation. Every business have it's own group and products to sell.
// Business can have rights to an estates.
// Every business has its own type and depends on it, business provides different services.
service MruVBusinessService {
    // Create a business.
    rpc CreateBusiness(CreateBusinessRequest) returns (CreateBusinessResponse) {
        option (google.api.http) = {
            post: "/v1/business"
            body: "*"
        };
    }

    // Get a business.
    rpc GetBusiness(GetBusinessRequest) returns (Business) {
        option (google.api.http) = {
            get: "/v1/business/{id}"
        };
    }

    // Update a business.
    rpc UpdateBusiness(UpdateBusinessRequest) returns (Business) {
        option (google.api.http) = {
            patch: "/v1/business/{id}"
            body: "*"
        };
    }

    // Delete a business.
    rpc DeleteBusiness(DeleteBusinessRequest) returns (DeleteBusinessResponse) {
        option (google.api.http) = {
            delete: "/v1/business/{id}"
        };
    }

    // Assign a business owner.
    rpc AssignOwner(AssignOwnerRequest) returns (AssignOwnerResponse) {
        option (google.api.http) = {
            post: "/v1/business/{id}/owner"
            body: "*"
        };
    }

    // Assign an estate to a business.
    rpc AssignEstate(AssignEstateRequest) returns (AssignEstateResponse) {
        option (google.api.http) = {
            post: "/v1/business/{business_id}/estates"
            body: "*"
        };
    }

    //
    rpc UnassignEstate(UnassignEstateRequest) returns (UnassignEstateResponse) {
        option (google.api.http) = {
            delete: "/v1/business/{business_id}/estates/{estate_id}"
        };
    }

    // Buy a business.
    rpc BuyBusiness(BuyBusinessRequest) returns (BuyBusinessResponse) {
        option (google.api.http) = {
            post: "/v1/business/{id}/buy"
            body: "*"
        };
    }

    // Subscribe to business events.
    rpc WatchBusiness(WatchBusinessRequest) returns (stream WatchBusinessResponse) {}

    // Subscribe to all businesses events.
    rpc WatchBusinesses(WatchBusinessesRequest) returns (stream WatchBusinessesResponse) {}
}

// Owner type.
enum OwnerType {
    OWNER_TYPE_UNSPECIFIED = 0;
    OWNER_TYPE_PLAYER = 1;
    OWNER_TYPE_GROUP = 2;
    OWNER_TYPE_SYSTEM = 3;
}

// Business data structure.
message Business {
    string name = 1;
    string description = 2;

    // Estates that belongs to a business.
    repeated int64 estate_ids = 3;

    // Purchase price in economy system.
    uint32 product_id = 4;

    // Owner type of the business.
    OwnerType owner_type = 5;
    // Owner of the business.
    uint32 owner_id = 6;

    // Items that belongs to business.
    repeated uint32 business_items = 7;

    // Business group
    uint32 business_group = 8;
}

// Request message for rpc `CreateBusiness`.
message CreateBusinessRequest {
    string name = 1;
    string description = 2;

    // Purchase price in economy system.
    uint32 product_id = 3;
}
// Response message for rpc `CreateBusiness`.
message CreateBusinessResponse {
    uint32 id = 1;
}

// Request message for rpc `GetBusiness`.
message GetBusinessRequest {
    uint32 id = 1;
}
// Response message for rpc `GetBusiness`.
message GetBusinessResponse {

}

// Request message for rpc `UpdateBusiness`.
message UpdateBusinessRequest {
    uint32 id = 1;
}
// Response message for rpc `UpdateBusiness`.
message UpdateBusinessResponse {

}

// Request message for rpc `DeleteBusiness`.
message DeleteBusinessRequest {
    uint32 id = 1;
}
// Response message for rpc `DeleteBusiness`.
message DeleteBusinessResponse {

}

// Request message for rpc `AssignOwner`.
message AssignOwnerRequest {
    uint32 id = 1;
}
// Response message for rpc `AssignOwner`.
message AssignOwnerResponse {
    OwnerType owner_type = 5;
    uint32 owner_id = 6;
}

// Request message for rpc `AssignEstate`.
message AssignEstateRequest {
    uint32 business_id = 1;
    uint32 estate_id = 2;
}
// Response message for rpc `AssignEstate`.
message AssignEstateResponse {
    uint32 estate_count = 1;
}

// Request message for rpc `UnassignEstate`.
message UnassignEstateRequest {
    uint32 business_id = 1;
    uint32 estate_id = 2;
}
// Response message for rpc `UnassignEstate`.
message UnassignEstateResponse {
    uint32 estate_count = 1;
}

// Request message for rpc `BuyBusiness`.
message BuyBusinessRequest {
    uint32 id = 1;

    OwnerType buyer_type = 5;
    uint32 buyer_id = 6;
}
// Response message for rpc `BuyBusiness`.
message BuyBusinessResponse {

}

// Request message for rpc `WatchBusiness`.
message WatchBusinessRequest {

}
// Response message for rpc `WatchBusiness`.
message WatchBusinessResponse {

}

// Request message for rpc `WatchBusinesses`.
message WatchBusinessesRequest {

}
// Response message for rpc `WatchBusinesses`.
message WatchBusinessesResponse {

}