syntax = "proto3";

package mruv.objects;

option go_package = "github.com/MruV-RP/mruv-pb-go/objects";

import "google/api/annotations.proto"; //from https://github.com/googleapis/googleapis

//The MruV objects service provides procedures for game objects.
service MruVObjectsService {
        // Create an object.
    rpc CreateObject(CreateObjectRequest) returns (CreateObjectResponse) {
        option (google.api.http) = {
            post: "/v1/object"
        };
    }

    // Get an object.
    rpc GetObject(GetObjectRequest) returns (GetObjectResponse) {
        option (google.api.http) = {
            get: "/v1/object/{id}"
        };
    }

    // Update an object.
    rpc UpdateObject(UpdateObjectRequest) returns (UpdateObjectResponse) {
        option (google.api.http) = {
            patch: "/v1/objects/{id}"
        };
    }

    // Delete an object.
    rpc DeleteObject(DeleteObjectRequest) returns (DeleteObjectResponse) {
        option (google.api.http) = {
            delete: "/v1/objects/{id}"
        };
    }
}

// SA-MP Dynamic object data structure.
message Object {
    uint32 model = 1;

    float x = 2;
    float y = 3;
    float z = 4;

    float rx = 5;
    float ry = 6;
    float rz = 7;

    // Virtual world id for which object will be visible. Set -1 to be visible for all.
    int32 world_id = 8;
    // Interior id for which object will be visible. Set -1 to be visible for all.
    int32 interior_id = 9;
    // SA-MP player id for which object will be visible. Set -1 to be visible for all.
    int32 player_id = 10;
    // Dynamic area id for which object will be visible. Set -1 to be visible for all.
    int32 area_id = 11;

    // Default streamer setting is 300.0
    float stream_distance = 12;
    // Default streamer setting is 0.0 = default game draw distance
    float draw_distance = 13;

    int32 priority = 15;

    uint32 estate_id = 16;
}

// Request message for rpc `CreateObject`.
message CreateObjectRequest {
    Object object = 1;
}
// Response message for rpc `CreateObject`.
message CreateObjectResponse {
    uint32 id = 1;
}

// Request message for rpc `GetObject`.
message GetObjectRequest {
    uint32 id = 1;
}
// Response message for rpc `GetObject`.
message GetObjectResponse {
    Object object = 1;
}

// Request message for rpc `UpdateObject`.
message UpdateObjectRequest {
    uint32 id = 1;
    Object object = 2;
}
// Response message for rpc `UpdateObject`.
message UpdateObjectResponse {

}

// Request message for rpc `DeleteObject`.
message DeleteObjectRequest {
    uint32 id = 1;
}
// Response message for rpc `DeleteObject`.
message DeleteObjectResponse {

}
